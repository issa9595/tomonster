import Button from '../button'
import { MONSTER_STATES, type MonsterState } from '@/types/monster'

/**
 * Labels fran√ßais pour chaque √©tat de monstre
 */
const MONSTER_STATE_LABELS: Record<MonsterState, string> = {
  happy: 'Heureux üòä',
  sad: 'Triste üò¢',
  angry: 'F√¢ch√© üò°',
  hungry: 'Affam√© üòã',
  sleepy: 'Somnolent üò¥'
}

/**
 * Props du composant MonsterStateSelector
 */
interface MonsterStateSelectorProps {
  /** √âtat actuellement s√©lectionn√© */
  selectedState: MonsterState
  /** Callback appel√© lors de la s√©lection d'un nouvel √©tat */
  onStateChange: (state: MonsterState) => void
}

/**
 * S√©lecteur d'humeur pour la pr√©visualisation du monstre
 *
 * Responsabilit√©s :
 * - Afficher tous les √©tats disponibles sous forme de boutons
 * - Indiquer visuellement l'√©tat actuellement s√©lectionn√©
 * - Permettre le changement d'√©tat pour la pr√©visualisation
 *
 * @example
 * <MonsterStateSelector
 *   selectedState="happy"
 *   onStateChange={(state) => setPreviewState(state)}
 * />
 */
function MonsterStateSelector ({ selectedState, onStateChange }: MonsterStateSelectorProps): React.ReactNode {
  return (
    <div className='flex flex-wrap items-center justify-center gap-2'>
      {MONSTER_STATES.map((state) => (
        <Button
          key={state}
          type='button'
          size='sm'
          variant={state === selectedState ? 'primary' : 'ghost'}
          onClick={() => onStateChange(state)}
        >
          {MONSTER_STATE_LABELS[state]}
        </Button>
      ))}
    </div>
  )
}

export default MonsterStateSelector
